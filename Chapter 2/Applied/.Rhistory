install.packages("foreign")
install.packages("Hmisc")
install.packages("Rcmdr", dependencies = TRUE)
install.packages("reshape")
library(forign)
library(Rcmdr)
library(reshape)
q()
data(package="ISLR2")
sqrt(5)
sqrt(2)
sqrt(3)
getdir()
getwd()
setwd("C:\Users\malex\Documents\Introduction to Statistical Learning Labs\Chapter 2\Applied")
setwd("C:/Users/malex/Documents/Introduction to Statistical Learning Labs/Chapter 2/Applied")
college <- read.csv("college.csv")
View(college)
rownames(college) <- college[ , 1]
View(college)
college <- college[ , -1]
View(college)
#numerical summary of the data
summary(college)
pairs(college[ , 1:10])
names(college[ , 1:10])
pairs(names(college[ , 1:10]), data=college)
pairs(names(college)[ , 1:10], data=college)
names(college)[ , 1:10]
college[ , 1:10]
names(college[ , 1:10])
pairs(college[ ,names(college[ , 1:10])], data=college)
first_ten <- names(college[ , 1:10])
pairs(college[,1:10], data=college)
pairs(college[,1:10])
source("~/Introduction to Statistical Learning Labs/Chapter 2/Applied/Chapter 2 Applied.R", echo=TRUE)
pairs(college[,2:10])
#scatter matrix of
pairs(college[,2:11])
attach(college)
plot(Outstate, Private)
plot(Private, Outstate)
view(college)
View(college)
any(is.na(college))
attach(college)
plot(Private, Outstate)
plot(x = Private, y = Outstate)
college <- read.csv("college.csv", stringsAsFactors = TRUE)
college <- read.csv("college.csv", stringsAsFactors = TRUE)
#view the college data set
View(college)
#check for na values
any(is.na(college))
#set row names to the name of the college (located in the first column)
rownames(college) <- college[ , 1]
View(college)
#remove the first column containing the university names
college <- college[ , -1]
View(college)
#numerical summary of the data
summary(college)
#scatter matrix of the first ten numerical variables
pairs(college[,1:10])
View(college)
plot(Private, Outstate)
attach(college)
plot(Private, Outstate)
plot(Private, Outstate, xlabel = "Private", ylabel = "Out of State Tuition")
plot(Private, Outstate, xlabel = "Private", ylabel = "Out of State Tuition")
plot(Private, Outstate, xlabel = Private, ylabel = "Out of State Tuition")
plot(Private, Outstate, xlab = "Private", ylab = "Out of State Tuition")
Elite <- rep("No", nrow(college))
Elite[college$Top10perc > 50] <- "Yes"
Elite <- as.factor(Elite)
college <- data.frame(college, Elite)
summary(college$Elite)
plot(Elite, Outstate)
plot(Elite, Outstate, xlab = "Elite", ylab="Out of State Tution")
View(college)
attach(college)
hist(college$Apps)
hist(college$Accept)
hist(college$Enroll)
hist(college$F.Undergrad)
par(mfrow = c(2,2))
hist(college$Apps)
hist(college$Accept)
hist(college$Enroll)
hist(college$F.Undergrad)
hist(college$Apps, col = 3)
hist(college$Accept, col = 4)
hist(college$Enroll, col = 5)
hist(college$F.Undergrad, col = 6)
hist(college$Apps, col = 3, breaks = 15)
hist(college$Apps, col = 3, breaks = 20)
hist(college$Accept, col = 4, breaks = 30)
hist(college$Enroll, col = 5, breaks = 40)
hist(college$F.Undergrad, col = 60)
hist(college$F.Undergrad, col = 50)
hist(college$Apps, col = 3, breaks = 20)
hist(college$Accept, col = 4, breaks = 30)
hist(college$Apps, col = 3, breaks = 20)
hist(college$Accept, col = 4, breaks = 30)
hist(college$Enroll, col = 5, breaks = 40)
hist(college$F.Undergrad, col = 6, breaks 50)
hist(college$Apps, col = 3, breaks = 40)
hist(college$Apps, col = 3, breaks = 40)
hist(college$Accept, col = 4, breaks = 40)
hist(college$Enroll, col = 5, breaks = 40)
hist(college$F.Undergrad, col = 6, breaks 40)
hist(college$Apps, col = 3, breaks = 40)
hist(college$Apps, col = 3, breaks = 40)
hist(college$Accept, col = 4, breaks = 40)
hist(college$Enroll, col = 5, breaks = 40)
hist(college$F.Undergrad, col = 2, breaks = 40)
hist(college$Apps, col = 3, breaks = 40, xlab = "Apps")
hist(college$Accept, col = 4, breaks = 40, xlab = "Accept")
hist(college$Enroll, col = 5, breaks = 40, xlab = "Enroll")
hist(college$F.Undergrad, col = 2, breaks = 40, xlab = "Undergrad")
rm(list = ls())
Auto <- read.csv("Auto.csv", na.strings = "?", stringsAsFactors = TRUE)
Auto <- na.omit(Auto)
summary(Auto)
range(Auto$mpg)
range(Auto$cylinders)
range(Auto$displacement)
range(Auto$horsepower)
range(Auto$weight)
range(Auto$acceleration)
range(Auto$year)
range(Auto$origin)
mean(Auto$mpg)
mean(Auto$cylinders)
mean(Auto$displacement)
mean(Auto$horsepower)
mean(Auto$weight)
mean(Auto$acceleration)
mean(Auto$year)
mean(Auto$origin)
#standard deviation of quantiative variables
sd(Auto$mpg)
sd(Auto$cylinders)
sd(Auto$displacement)
sd(Auto$horsepower)
sd(Auto$weight)
sd(Auto$acceleration)
sd(Auto$year)
sd(Auto$origin)
Auto[-c(10:85), ]
Auto[-c(10:84), ]
Auto[-c(10:85), ]
Auto[-c(10:84), ]
Auto[-c(10:83), ]
Auto[-c(10:84), ]
Auto <- Auto[-c(10:84), ]
#range of quantitative variables
range(Auto$mpg)
range(Auto$cylinders)
range(Auto$displacement)
range(Auto$horsepower)
range(Auto$weight)
range(Auto$acceleration)
range(Auto$year)
range(Auto$origin)
#mean of quantitative variables
mean(Auto$mpg)
mean(Auto$cylinders)
mean(Auto$displacement)
mean(Auto$horsepower)
mean(Auto$weight)
mean(Auto$acceleration)
mean(Auto$year)
mean(Auto$origin)
#standard deviation of quantiative variables
sd(Auto$mpg)
sd(Auto$cylinders)
sd(Auto$displacement)
sd(Auto$horsepower)
sd(Auto$weight)
sd(Auto$acceleration)
sd(Auto$year)
sd(Auto$origin)
#read in auto data set, assigning "?" as na, and setting strings as cateogrical
Auto <- read.csv("Auto.csv", na.strings = "?", stringsAsFactors = TRUE)
#omit na values from Auto data set
Auto <- na.omit(Auto)
pairs(Auto)
pairs(Auto, col = 2)
library(ISLR2)
install.packages(ISLR2)
#install packages for ISLR2
install.packages("ISLR2")
library(ISLR2)
?Boston
rm(list=ls())
#load data set
library(ISLR2)
#read about the data set
?Boston
#pairwise scatterplots
pairs(Boston)
#pairwise scatterplots
pairs(Boston, col = 2)
#pairwise scatterplots
pairs(Boston, col = 1)
#pairwise scatterplots
pairs(Boston, col = 2)
?Boston
attach(Boston)
hist(crim)
range(crim)
range(tax)
range(ptratio)
summary(chas)
chas <- as.factor(chas)
summary(chas)
Boston$chas <- as.factor(Boston$chas)
summary(Boston$chas)
median(ptratio)
min(medv)
Boston[medv == 5, ]
summary(Boston)
nrow(Boston[rm > 7, ])
nrow(Boston[rm > 8, ])
hist(rm)
Boston[rm > 8, ]
#histogram of average rooms per dwelling
par(mfrow = c(1,1))
hist(rm)
q()
