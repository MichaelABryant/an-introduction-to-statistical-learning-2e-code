install.packages("foreign")
install.packages("Hmisc")
install.packages("Rcmdr", dependencies = TRUE)
install.packages("reshape")
library(forign)
library(Rcmdr)
library(reshape)
q()
c(1,3,2,5)
x <- c(1,3,2,5)
y = c(1,3,2,5)
y = c(1,4,3)
y <- c(1,4,3)
?c
length(x)
length(y)
x + y
x = c(1,6,2)
x + y
x <- c(1,3,2,5)
x = c(1,6,2)
y = c(1,4,3)
length(x)
length(y)
x + y
ls()
rm(x,y)
?ls
?rm
ls()
#help function for matrix
?matrix
#define matrix
x <- matrix(data = c(1,2,3,4), nrow = 2, ncol = 2)
x
x <- matrix(c(1,2,3,4), 2, 2)
x
#create matrix by rows
matrix(c(1,2,3,4), 2, 2, byrow = TRUE)
sqrt(x)
#square every element
x^2
x <- rnorm(50)
y <- x + rnorm(50, mean = 50, sd = .1)
cor(x,y)
set.seed(1303)
rnorm(50)
x == rnorm(50)
rnorm(50)
rnorm(50)
set.seed(3)
y <- rnorm(100)
mean(y)
var(y)
sqrt(var(y))
sd(y)
rm(list=ls())
x <- rnorm(100)
y <- rnorm(100)
plot(x,y)
plot(x,y,xlab="this is the x-axis",
ylab = "this is the y-axis",
main = "Plot of X vs Y")
pdf("Figure.pdf")
plot(x, y, col = "green")
dev.off()
pdf("Figure.pdf")
plot(x, y, col = "green")
dev.off()
rm(list=ls())
#sequence from 1 to 10
x <- seq(1,10)
x <- 1:10
x <- seq(-pi, pi, length = 50)
rm(list=ls())
#contour plot
y <- x
x <- seq(-pi, pi, length = 50)
#contour plot
y <- x
f <- outer(x, y, function(x, y) cos(y) / (1 + x^2))
contour(x, y, f)
contour(x y, f, nlevels = 45, add = T)
contour(x y, f, nlevels = 45, add = T)
contour(x, y, f, nlevels = 45, add = T)
contour(x, y, f)
contour(x, y, f, nlevels = 45, add = T)
fa <- (f - t(f)) / 2
contour(x, y, fa, nlevels = 15)
contour(x, y, f)
#adds more lines and labels
contour(x, y, f, nlevels = 45, add = T)
#adds more lines and labels
contour(x, y, f, nlevels = 45)
contour(x, y, f)
#adds more lines and labels
contour(x, y, f, nlevels = 45)
#adds more lines and labels
contour(x, y, f, nlevels = 45, add = T)
#adds more lines and labels
contour(x, y, f, nlevels = 45, add = T)
contour(x, y, f)
contour(x, y, fa, nlevels = 15)
#color-coded plot (heatmap)
image(x, y, fa)
persp(x, y, fa)
persp(x, y, fa, theta = 30)
persp(x, y, fa, theta = 30, phi = 20)
persp(x, y, fa, theta = 30)
persp(x, y, fa, theta = 30, phi = 20)
#change perspective
persp(x, y, fa)
persp(x, y, fa, theta = 30)
persp(x, y, fa, theta = 30, phi = 20)
persp(x, y, fa, theta = 30, phi = 70)
persp(x, y, fa, theta = 30, phi = 40)
A <- matrix(1:16, 4,4)
rm(list=ls())
A <- matrix(1:16, 4,4)
A
A[2,3]
A[c(1,3), c(2,4)]
A[1:3, 2:4]
A[1:2, ]
A[ , 1:2]
A[1, ]
A[-c(1,3), ]
A[-c(1,3), -c(1,3,4)]
#dimensions of a matrix
dim(A)
getwd()
setwd("C:\Users\malex\Documents\Introduction to Statistical Learning Labs")
setwd("C:/Users/malex/Documents/Introduction to Statistical Learning Labs")
Auto <- read.table(file = Auto)
Auto <- read.table("Auto.csv")
Auto <- read.table(file = "Auto.csv")
Auto <- read.table("Auto.data")
getwd()
Auto <- read.table("Auto.csv")
Auto <- read.table("Auto.csv", head=TRUE)
Auto <- read.table("Auto.csv")
?read.table
Auto <- read.table(file = "Auto.csv")
Auto <- read.table(file = "Auto.csv", fill=TRUE)
Auto <- read.table(file = "Auto.csv")
Auto <- scan("Auto.csv")
Auto <- scan("Auto.csv", ",")
Auto <- read.table("Auto.csv")
Auto <- read.table("Auto.csv", header = T, na.string="?")
Auto <- read.table("Auto.csv", header = T, na.string="?", stringsAsFactors=T)
Auto <- read.csv("Auto.csv")
View(Atuo)
View(Auto)
head(Auto)
head(Auto)
Auto <- read.csv("Auto.csv", na.strings = "?", na.strings = TRUE)
View(Auto)
View(Auto)
Auto <- read.csv("Auto.csv", na.strings = "?", na.strings = TRUE)
View(Auto)
Auto <- read.csv("Auto.csv", na.strings = "?", stringsAsFactors = TRUE)
View(Auto)
head(Auto)
dim(Auto)
Auto[1:4, ]
#omit missing observations
Auto <- na.omit(Auto)
dim(Auto)
names(Auto)
#plot variables
plot(Auto$cylinders, Auto$mpg)
attach(Auto)
plot(cylinders, mpg)
#convert quantitative variable to qualitative
cylinders <- as.factor(cylinders)
#automatically plots qualitative variables as boxplots
plot(cylinders, mpg)
plot(cylinders, mpg, col="red")
plot(cylinders, mpg, col = "red", varwidth = TRUE)
plot(cylinders, mpg, "red", varwidth = TRUE, horizontal = TRUE)
plot(cylinders, mpg, col = "red", varwidth = TRUE, horizontal = TRUE)
plot(cylinders, mpg, col = "red", varwidth = TRUE, xlab = "cylinders", ylab = "MPG")
#histograms and customizations where col = 2 is the same as col = "red"
hist(mpg)
hist(mpg, col = 2)
hist(mpg, col = 2, breaks = 15)
#pairplots
pairs(Auto)
pairs(~ mpg + displacement + horsepower + weight + acceleration, data = Auto)
#pairplots
pairs(Auto)
pairs(~ mpg + displacement + horsepower + weight + acceleration, data = Auto)
#identify a point (click on the point)
plot(horsepower, mpg)
identify(horsepower, mpg, name)
plot(horsepower, mpg)
identify(horsepower, mpg, name)
#descriptive statistics of every variable
summary(Auto)
#descriptive statistics of one variable
summary(mpg)
#save commands
savehistory()
#quit R
q()
