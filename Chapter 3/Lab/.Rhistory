install.packages("foreign")
install.packages("Hmisc")
install.packages("Rcmdr", dependencies = TRUE)
install.packages("reshape")
library(forign)
library(Rcmdr)
library(reshape)
q()
getwd()
setwd("C:/Users/malex/Documents/Introduction to Statistical Learning Labs/Chapter 3/Lab")
install.packages("MASS")
library(ISLR2)
library(MASS)
head(Boston)
#look at help file for the data set
?Boston
#fit a simple linear regression model
lm.fit <- lm(medv ~ lstat)
#fit a simple linear regression model
attach(Boston)
lm.fit <- lm(medv ~ lstat)
#some details about the model
lm.fit
#more detailed summary
summary(lm.fit)
#other information stored in variable
names(lm.fit)
#lm.fit$coefficients or coef(lm.fit)
coef(lm.fit)
#confidence interval
confint(lm.fit)
#prediction and prediction interval
predict(lm.fit, data.frame(lstat = (c(5,10,15))),
interval = "confidence")
predict(lm.fit, data.frame(lstat = (c(5,10,15))),
interval = "prediction")
plot(lstat, medv)
abline(lm.fit)
plot(lstat, medv, col=2)
abline(lm.fit)
#plotting settings abline(a,b) creates line with intercept a and slope b
abline(lm.fit, lwd=3)
#plot points and least squares regression line
plot(lstat, medv)
abline(lm.fit)
#plotting settings abline(a,b) creates line with intercept a and slope b
abline(lm.fit, lwd=3)
abline(lm.fit, lwd=3, col = "red" )
plot(lstat, medv, col="red")
plot(lstat, medv, pch= 20)
plot(lstat, medv, pch = "+")
plot(1:20, 1:20, pch = 1:20)
par(mfrow = c(2,2))
plot(lm.fit)
#alternative method for residuals
plot(predict(lm.fit, residuals(lm.fit)))
#alternative method for residuals
plot(predict(lm.fit), residuals(lm.fit))
plot(predict(lm.fit), rstudent(lm.fit))
#leverage statistics
plot(hatvalues(lm.fit))
which.max(hatvalues(lm.fit))
lm.fit <- lm(medv ~ lstat + age, data = Boston)
summary(lm.fit)
#regress mdv onto all predictors, print summary
lm.fit <- lm(medv ~ ., data = Boston)
summary(lm.fit)
library(ISLR2)
#regress medv onto lstat and age, print summary
lm.fit <- lm(medv ~ lstat + age, data = Boston)
summary(lm.fit)
#regress mdv onto all predictors, print summary
lm.fit <- lm(medv ~ ., data = Boston)
summary(lm.fit)
library(ISLR2$Boston)
library(ISLR2)
##3.6.3 Multiple Linear Regression
detach("package:Boston", unload =TRUE)
##3.6.3 Multiple Linear Regression
detach("Boston", unload =TRUE)
library(ISLR2)
#regress medv onto lstat and age, print summary
lm.fit <- lm(medv ~ lstat + age, data = Boston)
summary(lm.fit)
#regress mdv onto all predictors, print summary
lm.fit <- lm(medv ~ ., data = Boston)
summary(lm.fit)
##3.6.3 Multiple Linear Regression
Boston <- read.csv("Boston.csv", na.strings = "?", stringsAsFactors = TRUE)
#regress medv onto lstat and age, print summary
lm.fit <- lm(medv ~ lstat + age, data = Boston)
summary(lm.fit)
#regress mdv onto all predictors, print summary
lm.fit <- lm(medv ~ ., data = Boston)
summary(lm.fit)
#access individual components
?summary.lm
#r-squared
summary(lm.fit)$r.sq
#RSE
summary(lm.fit)$sigma
library(car)
vif(lm.fit)
#regression using all variables but one
lm.fit1 <- lm(medv ~ . - age, data = Boston)
summary(lm.fit1)
#alternatively
lm.fit1 <- update(lm.fit, ~. - age)
#regress medv onto lstat, age, and lstat:age
summary(lm(medv ~ lstat * age, data = Boston))
#regress medv onto lstat and lstat^2
lm.fit2 <- lm(medv ~ lstat + I(lstat^2))
#regress medv onto lstat and lstat^2
lm.fit2 <- lm(medv ~ lstat + I(lstat^2), data = Boston)
summary(lm.fit2)
lm.fit <- lm(medv ~ lstat)
lm.fit <- lm(medv ~ lstat, data = Boston)
anova(lm.fit, lm.fit2)
par(mfrow = c(2,2))
plot(lm.fit2)
#polynomial predictors can also be created using poly()
lm.fit5 <- lm(medv ~ poly(lstat,5))
summary(lm.fit5)
#polynomial predictors can also be created using poly()
lm.fit5 <- lm(medv ~ poly(lstat,5), data = Boston)
summary(lm.fit5)
#log transformations
summary(lm(medv ~ log(rm), data = Boston))
head(Carseats)
##3.6.6 Qualitative Predictors
rm(list=ls())
lm.fit <- lm(Sales ~ . + Income:Advertisting + Price:Age, data = Carseats)
lm.fit <- lm(Sales ~ . + Income:Advertising + Price:Age, data = Carseats)
summary(lm.fit)
attach(Carseats)
contrasts(SelveLoc)
contrasts(ShelveLoc)
#learn more
?contrasts
#create a function to load the libraries for this book
LoadLibraries <- function() {
library(ISLR2)
library(MASS)
print("The libraries have been loaded.")
}
#execute function
LoadLibraries
#execute function
LoadLibraries
#execute function
LoadLibraries()
head(Advertising)
summary(Advertising)
?Advertising
?ISL2
?ISL2
library(MASS)
library(ISLR2)
?ISLR@
?ISLR2
?ISLR2
?Boston
rm(list=ls())
